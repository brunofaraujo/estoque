// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  seed     = "prisma/seed.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  name      String    @unique
  password  String    @db.VarChar(255)
  moves     Move[]
  requests  Request[]
  deleted   Boolean   @default(false) @db.Boolean()
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Employee {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  register   String    @unique
  department String    @db.VarChar(255)
  moves      Move[]
  deleted    Boolean   @default(false) @db.Boolean()
  requests   Request[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Item {
  id             Int             @id @default(autoincrement())
  title          String          @db.VarChar(255)
  description    String?
  serial         String?
  register       String?
  expiration     DateTime?
  batch          String?
  volume         Volume          @relation(fields: [volumeId], references: [id])
  volumeId       Int
  brand          Brand           @relation(fields: [brandId], references: [id])
  brandId        Int
  category       Category        @relation(fields: [categoryId], references: [id])
  categoryId     Int
  supply         Supply          @relation(fields: [supplyId], references: [id], onDelete: Cascade)
  supplyId       Int             @unique
  requestAmounts RequestAmount[]
  deleted        Boolean         @default(false) @db.Boolean
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Brand {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(255)
  items     Item[]
  deleted   Boolean  @default(false) @db.Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  items     Item[]
  deleted   Boolean  @default(false) @db.Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Volume {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  items     Item[]
  deleted   Boolean  @default(false) @db.Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Supply {
  id        Int      @id @default(autoincrement())
  current   Int
  item      Item?
  history   Move[]
  deleted   Boolean  @default(false) @db.Boolean()
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Move {
  id          Int       @id @default(autoincrement())
  type        String    @db.Char(1)
  amount      Int
  description String?   @db.VarChar(255)
  supply      Supply    @relation(fields: [supplyId], references: [id])
  supplyId    Int
  requester   Employee? @relation(fields: [employeeId], references: [id])
  employeeId  Int?
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Request {
  id             Int             @id @default(autoincrement())
  requester      Employee        @relation(fields: [employeeId], references: [id])
  employeeId     Int
  description    String          @db.VarChar(255)
  status         String          @db.Char(1)
  user           User?           @relation(fields: [userId], references: [id])
  userId         Int?
  requestAmounts RequestAmount[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model RequestAmount {
  id        Int      @id @default(autoincrement())
  request   Request  @relation(fields: [requestId], references: [id])
  requestId Int
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int
  amount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
